{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"6LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAiB5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAOd,2BACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,Y,uBCRlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACTC,EADS,iDACwCC,UAAWH,GADnD,+DAEII,MAAMF,GAFV,cAETG,EAFS,gBAGMA,EAAKC,OAHX,uBAGRC,EAHQ,EAGRA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAT3B,kBAYRM,GAZQ,4CAAH,sDCGPO,EAAc,SAAC,GAAwB,IAAtBJ,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIrC,OAFAc,QAAQC,IAAI,CAAEN,KAAIC,QAAOV,QAGrB,yBAAKgB,UAAU,0CACX,yBAAKC,IAAKjB,EAAKkB,IAAI,UACnB,+BAAMR,EAAN,OCLCS,EAAU,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SAAe,ECFb,SAAEA,GAAe,IAAD,EACdd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAgBxC,OAVAC,qBAAW,WACP1B,EAASC,GACJ0B,MAAM,SAAAC,GACHH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGtB,CAACtB,IAEGuB,EDZyBK,CAAc5B,GAAlCa,EAFyB,EAE9BN,KAAae,EAFiB,EAEjBA,QAOpB,OACE,oCACE,wBAAIJ,UAAU,qCAAd,IAAqDlB,EAArD,KACCsB,GAAW,uBAAGJ,UAAU,oCAAb,WACX,yBAAKA,UAAU,aAERL,EAAOJ,KAAK,SAAAC,GAAG,OACZ,kBAAC,EAAD,eACKmB,IAAKnB,EAAIC,IACJD,UEUdoB,EA5BM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,gBAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAQvB,OACA,oCACI,4CAEA,kBAAC,EAAD,CAAaA,cAAgBA,IAE7B,6BAEA,4BACK8C,EAAWtB,KAAK,SAAAT,GAAQ,OACrB,kBAAC,EAAD,CACI6B,IAAK7B,EACLA,SAAUA,U,MCT9BgC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.294614c5.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport propTypes from \"prop-types\"  \r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)        \r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if( inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue, ...cats])\r\n            setInputValue('');\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input \r\n                type='text'\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: propTypes.func.isRequired\r\n}","export const getGifs = async( category ) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=bKcYC37EZHY15W9iye5a7AGkys0qb8HS`\r\n        const resp = await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n        return gifs;\r\n        \r\n    }","import React from 'react'\r\n \r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n\r\n    console.log({ id, title, url } )   \r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeIn'> \r\n            <img src={url} alt='title' /> \r\n            <p> { title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n \r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading } = useFetchGifs( category );\r\n\r\n    /* const [images, setImages] = useState([]);\r\n\r\n     */\r\n\r\n           \r\n    return (\r\n      <>\r\n        <h3 className='animate__animated animate__fadeIn'> { category } </h3>\r\n        {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n        {<div className='card-grid'>  \r\n            {\r\n                images.map( img => (\r\n                   <GifGridItem \r\n                        key={img.id}\r\n                        { ...img }\r\n                    />\r\n                ))\r\n            }       \r\n        </div>}\r\n      </>      \r\n    )\r\n}\r\n\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {               \r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });                           \r\n            })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { AddCategory } from \"./AddCategory\";\r\nimport { GifGrid } from \"./GifGrid\";\r\n/* import PropTypes from \"prop-types\"  */\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState(['Dragon Ball']) \r\n\r\n    /* const handleAdd = () => {\r\n        setCategories( [...categories, 'Naruto'] )\r\n    } \r\n */\r\n    return(\r\n    <>\r\n        <h2>GifExpertApp</h2> \r\n\r\n        <AddCategory setCategories={ setCategories } />\r\n\r\n        <hr/>\r\n\r\n        <ol>\r\n            {categories.map( category => \r\n                <GifGrid \r\n                    key={category}\r\n                    category={category}\r\n                />\r\n            )}\r\n        </ol>\r\n    </>    \r\n    ) \r\n}\r\n\r\nexport default GifExpertApp","/* import { heroes } from \"./data/heroes\" */\r\n\r\nimport React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport GifExpertApp from \"./components/GifExpertApp\"\r\n/* import FirstApp from \"./App\"; */\r\n/* import CounterApp from \"./CounterApp\"; */\r\nimport \"./index.css\"\r\n\r\n/* import App from \"./App\"\r\nimport {Provider} from \"react-redux\"\r\nimport store from \"./redux\"\r\n\r\n///import App2 from \"./App2\"\r\n*/\r\nReactDOM.render(    \r\n    <GifExpertApp />,    \r\n    document.getElementById(\"root\")\r\n) \r\n/* const getImgage = async() => {\r\n    const apiKey = 'bKcYC37EZHY15W9iye5a7AGkys0qb8HS'\r\n    const resp = await(fetch(`https://api.giphy.com/v1/gifs/random?api_key=${ apiKey }`));\r\n    const {data} = await resp.json();\r\n    const {url} = data.images.original;\r\n\r\n    const img = document.createElement('img');\r\n    img.src = url;\r\n    document.body.append(img);\r\n}\r\n\r\ngetImgage() */\r\n/* \r\nconst divRoot = document.querySelector('#root');\r\nReactDOM.render( <CounterApp value={ 7 }/>, divRoot);  */\r\n\r\n/* http_Post\r\n    .then( resp => resp.json() )  \r\n    .then( ({data}) => {\r\n        const { url } = data.images.original\r\n        const img = document.createElement('img');\r\n        img.src = url;\r\n        document.body.append(img);\r\n    })  \r\n    .catch( console.warn ) */\r\n\r\n\r\n/* import store from \"./redux\"\r\nimport {changeCount} from \"./redux/count\"\r\nimport {removeFavoriteThings, addFavoriteThings} from \"./redux/favoriteThings\"\r\nimport {setTittleVideo, upvoteVideo, incrementViewCount, downvoteVideo} from \"./redux/youTubeVideo\"\r\nimport {setUserDetails, removeUserDetails} from \"./redux/user\" \r\n\r\n\r\nstore.dispatch(changeCount(\"21\"))\r\nstore.dispatch(addFavoriteThings(\"I love the Soccer\"))\r\nstore.dispatch(addFavoriteThings(\"I love the Soccer and the Pizza\"))\r\nstore.dispatch(removeFavoriteThings(\"I love the Soccer\"))\r\nstore.dispatch(setTittleVideo(\"Shakira Dorado\"))\r\nstore.dispatch(upvoteVideo())\r\nstore.dispatch(downvoteVideo())\r\nstore.dispatch(incrementViewCount())\r\nstore.dispatch(setUserDetails({\r\n    FirstName: \"Will\",\r\n    LastName: \"Hern√°ndez\",\r\n    Id: 1,\r\n    Email: \"wilhernan@gmail.com\"\r\n}))\r\nstore.dispatch(setUserDetails({   \r\n    Email: \"wilhernan777@gmail.com\"\r\n}))\r\nstore.dispatch(removeUserDetails())\r\n */"],"sourceRoot":""}